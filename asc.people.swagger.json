{
  "openapi": "3.0.1",
  "info": {
    "title": "ASC.People",
    "version": "v2"
  },
  "paths": {
    "/api/2.0/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Returns the general information about all the groups, such as group ID and group manager.",
        "description": "This method returns partial group information.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "manager",
            "in": "query",
            "description": "Specifies if the user is a manager or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get groups"
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Adds a new group with the group manager, name, and members specified in the request.",
        "requestBody": {
          "description": "Group request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.GroupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.GroupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.GroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Add a new group"
      }
    },
    "/api/2.0/groups/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Returns the detailed information about the selected group.",
        "description": "This method returns full group information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get a group"
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Updates the existing group changing the group manager, name, and/or members.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Group request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update a group"
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Deletes a group with the ID specified in the request from the list of groups on the portal.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete a group"
      }
    },
    "/api/2.0/groups/user/{userid}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Returns a list of groups for the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get user groups"
      }
    },
    "/api/2.0/groups/{fromId}/members/{toId}": {
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Moves all the members from the selected group to another one specified in the request.",
        "parameters": [
          {
            "name": "fromId",
            "in": "path",
            "description": "Group ID to move from",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "toId",
            "in": "path",
            "description": "Group ID to move to",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Move group members"
      }
    },
    "/api/2.0/groups/{id}/members": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Replaces the group members with those specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Group request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Replace group members"
      },
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Adds new group members to the group with the ID specified in the request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Group request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Add group members"
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Removes the group members specified in the request from the selected group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Group request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Remove group members"
      }
    },
    "/api/2.0/groups/{id}/manager": {
      "put": {
        "tags": [
          "Group"
        ],
        "summary": "Sets a user with the ID specified in the request as a group manager.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Request parameters for setting a group manager",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SetManagerRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SetManagerRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SetManagerRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set a group manager"
      }
    },
    "/api/2.0/group/room/{id}": {
      "get": {
        "tags": [
          "Group / Rooms"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "excludeShared",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.GroupDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/people/{userid}/contacts": {
      "delete": {
        "tags": [
          "People / Contacts"
        ],
        "summary": "Deletes the contacts of the user with the ID specified in the request from the portal.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user contacts",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete user contacts"
      },
      "post": {
        "tags": [
          "People / Contacts"
        ],
        "summary": "Sets the contacts of the user with the ID specified in the request replacing the current portal data with the new data.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user contacts",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set user contacts"
      },
      "put": {
        "tags": [
          "People / Contacts"
        ],
        "summary": "Updates the contact information of the user with the ID specified in the request merging the new data into the current portal data.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user contacts",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ContactsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update user contacts"
      }
    },
    "/api/2.0/people/{userid}/password": {
      "put": {
        "tags": [
          "People / Password"
        ],
        "summary": "Sets a new password to the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "requestBody": {
          "description": "Request parameters for setting new password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberBaseRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberBaseRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberBaseRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change a user password"
      }
    },
    "/api/2.0/people/password": {
      "post": {
        "tags": [
          "People / Password"
        ],
        "summary": "Reminds a password to the user using the email address specified in the request.",
        "requestBody": {
          "description": "Member request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.EmailMemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.EmailMemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.EmailMemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-shortName": "Remind a user password"
      }
    },
    "/api/2.0/people/{userid}/photo/thumbnails": {
      "post": {
        "tags": [
          "People / Photos"
        ],
        "summary": "Creates photo thumbnails by coordinates of the original image specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Thumbnail request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Create photo thumbnails"
      }
    },
    "/api/2.0/people/{userid}/photo": {
      "delete": {
        "tags": [
          "People / Photos"
        ],
        "summary": "Deletes a photo of the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete a user photo"
      },
      "get": {
        "tags": [
          "People / Photos"
        ],
        "summary": "Returns a photo of the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get a user photo"
      },
      "put": {
        "tags": [
          "People / Photos"
        ],
        "summary": "Updates a photo of the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user photo",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update a user photo"
      },
      "post": {
        "tags": [
          "People / Photos"
        ],
        "summary": "Uploads a photo of the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formCollection": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>"
                    }
                  }
                }
              },
              "encoding": {
                "formCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.FileUploadResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.FileUploadResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.FileUploadResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Upload a user photo"
      }
    },
    "/api/2.0/people/phone": {
      "post": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Sends a notification to the user with the ID specified in the request to change their phone number.",
        "requestBody": {
          "description": "Request parameters for updating user contacts",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberSimpleRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberSimpleRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberSimpleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Send a notification to change a phone"
      }
    },
    "/api/2.0/people": {
      "post": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Adds a new portal user with the first name, last name, email address, and several optional parameters specified in the request.",
        "requestBody": {
          "description": "Member request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.MemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Add a user"
      },
      "get": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Returns a list of profiles for all the portal users.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get profiles"
      }
    },
    "/api/2.0/people/invite": {
      "post": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Invites users specified in the request to the current portal.",
        "requestBody": {
          "description": "Request parameters for inviting users",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.InviteUsersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.InviteUsersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.InviteUsersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Invite users"
      },
      "put": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Resends emails to the users who have not activated their emails.",
        "requestBody": {
          "description": "Request parameters for updating portal users",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Resend activation emails"
      }
    },
    "/api/2.0/people/{userid}": {
      "delete": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Deletes a user with the ID specified in the request from the portal.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete a user"
      },
      "put": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Updates the data for the selected portal user with the first name, last name, email address, and/or optional parameters specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Member request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update a user"
      }
    },
    "/api/2.0/people/@self": {
      "delete": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Deletes the current user profile.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete my profile"
      },
      "get": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Returns the detailed information about the current user profile.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get my profile"
      }
    },
    "/api/2.0/people/email": {
      "get": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Returns the detailed information about a profile of the user with the email specified in the request.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "User email address",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get a profile by user email"
      },
      "post": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Sends a message to the user email with the instructions to change the email address connected to the portal.",
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Send instructions to change email"
      }
    },
    "/api/2.0/people/{username}": {
      "get": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Returns the detailed information about a profile of the user with the name specified in the request.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get a profile by user name"
      }
    },
    "/api/2.0/people/delete": {
      "put": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Deletes a list of the users with the IDs specified in the request.",
        "requestBody": {
          "description": "Request parameters for updating portal users",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Delete users"
      }
    },
    "/api/2.0/people/{userid}/culture": {
      "put": {
        "tags": [
          "People / Profiles"
        ],
        "summary": "Updates the user language with the parameter specified in the request.",
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Update user language"
      }
    },
    "/api/2.0/people/userquota": {
      "put": {
        "tags": [
          "People / Quota"
        ],
        "summary": "Changes a quota limit for the users with the IDs specified in the request.",
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change a user quota limit"
      }
    },
    "/api/2.0/people/resetquota": {
      "put": {
        "tags": [
          "People / Quota"
        ],
        "summary": "Resets a user quota limit with the ID specified in the request from the portal.",
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Reset a user quota limit"
      }
    },
    "/api/2.0/accounts/room/{id}/search": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "employeeStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          },
          {
            "name": "activationStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
            }
          },
          {
            "name": "excludeShared",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/people/status/{status}/search": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "summary": "Returns a list of users matching the status filter and search query.",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "User status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Search users by status filter"
      }
    },
    "/api/2.0/people/filter": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "summary": "Returns a list of users with full information about them matching the parameters specified in the request.",
        "parameters": [
          {
            "name": "employeeStatus",
            "in": "query",
            "description": "User status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "activationStatus",
            "in": "query",
            "description": "Activation status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
            }
          },
          {
            "name": "employeeType",
            "in": "query",
            "description": "User type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
            },
            "example": "All"
          },
          {
            "name": "employeeTypes",
            "in": "query",
            "description": "List of user types",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
              }
            }
          },
          {
            "name": "isAdministrator",
            "in": "query",
            "description": "Specifies if the user is an administrator or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "payments",
            "in": "query",
            "description": "User payment status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Payments"
            }
          },
          {
            "name": "accountLoginType",
            "in": "query",
            "description": "Account login type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.AccountLoginType"
            }
          },
          {
            "name": "quotaFilter",
            "in": "query",
            "description": "Filter by quota (Default - 1, Custom - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.QuotaFilter"
            }
          },
          {
            "name": "withoutGroup",
            "in": "query",
            "description": "Specifies whether the user should be a member of a group or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "excludeGroup",
            "in": "query",
            "description": "Specifies whether or not the user should be a member of the group with the specified ID",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Search users and their information by extended filter"
      }
    },
    "/api/2.0/people/search": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "summary": "Returns a list of users matching the search query. This method uses the query parameters.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Search users (using query parameters)"
      }
    },
    "/api/2.0/people/@search/{query}": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "summary": "Returns a list of users matching the search query.",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Search users"
      }
    },
    "/api/2.0/people/simple/filter": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "summary": "Returns a list of users matching the parameters specified in the request.",
        "parameters": [
          {
            "name": "employeeStatus",
            "in": "query",
            "description": "User status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Group ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          {
            "name": "activationStatus",
            "in": "query",
            "description": "Activation status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
            }
          },
          {
            "name": "employeeType",
            "in": "query",
            "description": "User type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
            },
            "example": "All"
          },
          {
            "name": "employeeTypes",
            "in": "query",
            "description": "List of user types",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
              }
            }
          },
          {
            "name": "isAdministrator",
            "in": "query",
            "description": "Specifies if the user is an administrator or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "payments",
            "in": "query",
            "description": "User payment status",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Payments"
            }
          },
          {
            "name": "accountLoginType",
            "in": "query",
            "description": "Account login type",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.AccountLoginType"
            }
          },
          {
            "name": "quotaFilter",
            "in": "query",
            "description": "Filter by quota (Default - 1, Custom - 2)",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.QuotaFilter"
            }
          },
          {
            "name": "withoutGroup",
            "in": "query",
            "description": "Specifies whether the user should be a member of a group or not",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "excludeGroup",
            "in": "query",
            "description": "Specifies whether or not the user should be a member of the group with the specified ID",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Search users by extended filter"
      }
    },
    "/api/2.0/people/room/{id}": {
      "get": {
        "tags": [
          "People / Search"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "employeeStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          },
          {
            "name": "activationStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
            }
          },
          {
            "name": "excludeShared",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/api/2.0/people/theme": {
      "get": {
        "tags": [
          "People / Theme"
        ],
        "summary": "Returns a theme which is set to the current portal.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get portal theme"
      },
      "put": {
        "tags": [
          "People / Theme"
        ],
        "summary": "Changes the current portal theme.",
        "requestBody": {
          "description": "Theme settings request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettings"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change portal theme"
      }
    },
    "/api/2.0/people/thirdparty/providers": {
      "get": {
        "tags": [
          "People / Third-party accounts"
        ],
        "summary": "Returns a list of the available third-party accounts.",
        "parameters": [
          {
            "name": "inviteView",
            "in": "query",
            "description": "Specifies whether to return providers that are available for invitation links, i.e. the user can login or register through these providers",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "settingsView",
            "in": "query",
            "description": "Specifies whether to return URLs in the format that is used on the Settings page",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "clientCallback",
            "in": "query",
            "description": "Method that is called after authorization",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          },
          {
            "name": "fromOnly",
            "in": "query",
            "description": "Provider name if the response only from this provider is needed",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.AccountInfoDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.AccountInfoDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.AccountInfoDto"
                  }
                }
              }
            }
          }
        },
        "x-shortName": "Get third-party accounts"
      }
    },
    "/api/2.0/people/thirdparty/linkaccount": {
      "put": {
        "tags": [
          "People / Third-party accounts"
        ],
        "summary": "Links a third-party account specified in the request to the user profile.",
        "requestBody": {
          "description": "Request parameters for linking accounts",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.LinkAccountRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.LinkAccountRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.LinkAccountRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Link a third-pary account"
      }
    },
    "/api/2.0/people/thirdparty/signup": {
      "post": {
        "tags": [
          "People / Third-party accounts"
        ],
        "summary": "Creates a third-party account with the parameters specified in the request.",
        "requestBody": {
          "description": "Request parameters for creating a third-party account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SignupAccountRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SignupAccountRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.SignupAccountRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-shortName": "Create a third-pary account"
      }
    },
    "/api/2.0/people/thirdparty/unlinkaccount": {
      "delete": {
        "tags": [
          "People / Third-party accounts"
        ],
        "summary": "Unlinks a third-party account specified in the request from the user profile.",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "Provider name",
            "schema": {
              "type": "string"
            },
            "example": "some text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Unlink a third-pary account"
      }
    },
    "/api/2.0/people/reassign/progress/{userid}": {
      "get": {
        "tags": [
          "People / User data"
        ],
        "summary": "Returns the progress of the started data reassignment for the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID whose data is reassigned",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the reassignment progress"
      }
    },
    "/api/2.0/people/reassign/start": {
      "post": {
        "tags": [
          "People / User data"
        ],
        "summary": "Starts the data reassignment for the user with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for starting the reassignment process",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.StartReassignRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.StartReassignRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.StartReassignRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Start the data reassignment"
      }
    },
    "/api/2.0/people/reassign/terminate": {
      "put": {
        "tags": [
          "People / User data"
        ],
        "summary": "Terminates the data reassignment for the user with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for terminating the reassignment process",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Terminate the data reassignment"
      }
    },
    "/api/2.0/people/remove/progress/{userid}": {
      "get": {
        "tags": [
          "People / User data"
        ],
        "summary": "Returns the progress of the started data deletion for the user with the ID specified in the request.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get the deletion progress"
      }
    },
    "/api/2.0/people/self/delete": {
      "put": {
        "tags": [
          "People / User data"
        ],
        "summary": "Sends instructions for deleting a user profile.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Send the deletion instructions"
      }
    },
    "/api/2.0/people/remove/start": {
      "post": {
        "tags": [
          "People / User data"
        ],
        "summary": "Starts the data deletion for the user with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for starting the deletion process",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Start the data deletion"
      }
    },
    "/api/2.0/people/remove/terminate": {
      "put": {
        "tags": [
          "People / User data"
        ],
        "summary": "Terminates the data deletion for the user with the ID specified in the request.",
        "requestBody": {
          "description": "Request parameters for terminating the deletion process",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.TerminateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Terminate the data deletion"
      }
    },
    "/api/2.0/people/status/{status}": {
      "get": {
        "tags": [
          "People / User status"
        ],
        "summary": "Returns a list of profiles filtered by user status.",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "User status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Get profiles by status"
      },
      "put": {
        "tags": [
          "People / User status"
        ],
        "summary": "Changes a status for the users with the IDs specified in the request.",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "New user status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change a user status"
      }
    },
    "/api/2.0/people/activationstatus/{activationstatus}": {
      "put": {
        "tags": [
          "People / User status"
        ],
        "summary": "Sets the required activation status to the list of users with the IDs specified in the request.",
        "parameters": [
          {
            "name": "activationstatus",
            "in": "path",
            "description": "Activation status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
            }
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Set an activation status to the users"
      }
    },
    "/api/2.0/people/type/{type}": {
      "put": {
        "tags": [
          "People / User type"
        ],
        "summary": "Changes a type for the users with the IDs specified in the request.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "New user type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
            },
            "example": "All"
          }
        ],
        "requestBody": {
          "description": "Request parameters for updating user information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "asc_auth_key": [
              "read",
              "write"
            ]
          }
        ],
        "x-shortName": "Change a user type"
      }
    }
  },
  "components": {
    "schemas": {
      "ASC.Api.Core.ApiDateTime": {
        "type": "object",
        "properties": {
          "utcTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "timeZoneOffset": {
            "type": "string",
            "format": "date-span",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ASC.Common.Threading.DistributedTaskStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.AccountLoginType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Payments": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.QuotaFilter": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeActivationStatus": {
        "enum": [
          0,
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeStatus": {
        "enum": [
          1,
          2,
          4,
          5,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.Core.Users.EmployeeType": {
        "enum": [
          "All",
          "RoomAdmin",
          "User",
          "DocSpaceAdmin",
          "Collaborator"
        ],
        "type": "string"
      },
      "ASC.Core.Users.MobilePhoneActivationStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ASC.People.ApiModels.RequestDto.ContactsRequestDto": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of user contacts",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.DarkThemeSettingsRequestDto": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.EmailMemberRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.GroupRequestDto": {
        "type": "object",
        "properties": {
          "groupManager": {
            "type": "string",
            "description": "Group manager ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "groupName": {
            "type": "string",
            "description": "Group name",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of group member IDs",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.InviteUsersRequestDto": {
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.People.ApiModels.RequestDto.UserInvitation"
            },
            "description": "List of user invitations",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "description": "List of user invitations",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.LinkAccountRequestDto": {
        "type": "object",
        "properties": {
          "serializedProfile": {
            "type": "string",
            "description": "Third-party profile in the serialized format",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.MemberBaseRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.MemberRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "isUser": {
            "type": "boolean",
            "description": "Specifies if this is a guest or a user",
            "nullable": true,
            "example": "true"
          },
          "firstname": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastname": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "department": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user departments",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "some text"
          },
          "sex": {
            "type": "string",
            "description": "Sex (male or female)",
            "nullable": true,
            "example": "some text"
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "worksfrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "some text"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of user contacts",
            "nullable": true
          },
          "files": {
            "type": "string",
            "description": "Avatar photo URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fromInviteLink": {
            "type": "boolean",
            "description": "Specifies if the user is added via the invitation link or not",
            "example": "true"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "target": {
            "type": "string",
            "description": "Target",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.MembersRequestDto": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of group member IDs",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.SetManagerRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.SignupAccountRequestDto": {
        "type": "object",
        "properties": {
          "serializedProfile": {
            "type": "string",
            "description": "Third-party profile in the serialized format",
            "nullable": true,
            "example": "some text"
          },
          "employeeType": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true,
            "example": "some text"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "key": {
            "type": "string",
            "description": "Link key",
            "nullable": true,
            "example": "some text"
          },
          "culture": {
            "type": "string",
            "description": "Culture",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.StartReassignRequestDto": {
        "type": "object",
        "properties": {
          "fromUserId": {
            "type": "string",
            "description": "User ID whose data will be reassigned to another user",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "toUserId": {
            "type": "string",
            "description": "User ID to whom all the data will be reassigned",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "deleteProfile": {
            "type": "boolean",
            "description": "Specifies whether to delete a profile when the data reassignment will be finished or not",
            "example": "true"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.TerminateRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID whose data is reassigned/removed",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.People.ApiModels.RequestDto.ThumbnailsRequestDto": {
        "type": "object",
        "properties": {
          "tmpFile": {
            "type": "string",
            "description": "Path to the temporary file",
            "nullable": true,
            "example": "some text"
          },
          "x": {
            "type": "integer",
            "description": "Horizontal coordinate",
            "format": "int32",
            "example": "1234"
          },
          "y": {
            "type": "integer",
            "description": "Vertical coordinate",
            "format": "int32",
            "example": "1234"
          },
          "width": {
            "type": "integer",
            "description": "Thumbnail width",
            "format": "int32",
            "example": "1234"
          },
          "height": {
            "type": "integer",
            "description": "Thumbnail height",
            "format": "int32",
            "example": "1234"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UpdateGroupRequestDto": {
        "type": "object",
        "properties": {
          "groupManager": {
            "type": "string",
            "description": "Group manager ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "groupName": {
            "type": "string",
            "description": "Group name",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "membersToAdd": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs to add to the group",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "membersToRemove": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs to remove from the group",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UpdateMemberRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "nullable": true,
            "example": "some text"
          },
          "passwordHash": {
            "type": "string",
            "description": "Password hash",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          },
          "isUser": {
            "type": "boolean",
            "description": "Specifies if this is a guest or a user",
            "nullable": true,
            "example": "true"
          },
          "firstname": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastname": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "department": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user departments",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "some text"
          },
          "sex": {
            "type": "string",
            "description": "Sex (male or female)",
            "nullable": true,
            "example": "some text"
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "worksfrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "nullable": true,
            "example": "some text"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of user contacts",
            "nullable": true
          },
          "files": {
            "type": "string",
            "description": "Avatar photo URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "fromInviteLink": {
            "type": "boolean",
            "description": "Specifies if the user is added via the invitation link or not",
            "example": "true"
          },
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true,
            "example": "some text"
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "target": {
            "type": "string",
            "description": "Target",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "nullable": true,
            "example": "some text"
          },
          "disable": {
            "type": "boolean",
            "description": "Specifies whether to disable a user or not",
            "nullable": true,
            "example": "true"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UpdateMemberSimpleRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UpdateMembersQuotaRequestDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "quota": {
            "description": "List of user IDs",
            "format": "int64",
            "example": "User quota"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ASC.People.ApiModels.RequestDto.UpdateMembersRequestDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user IDs",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "resendAll": {
            "type": "boolean",
            "description": "Specifies whether to resend invitation letters to all the users or not",
            "example": "true"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UpdatePhotoMemberRequestDto": {
        "type": "object",
        "properties": {
          "files": {
            "type": "string",
            "description": "Avatar photo URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.RequestDto.UserInvitation": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true,
            "example": "some text"
          },
          "type": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeType"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.ResponseDto.AccountInfoDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Provider",
            "nullable": true,
            "example": "some text"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "format": "uri",
            "nullable": true,
            "example": "some text"
          },
          "linked": {
            "type": "boolean",
            "description": "Specifies if an account is linked or not",
            "example": "true"
          },
          "class": {
            "type": "string",
            "description": "Class",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.ResponseDto.FileUploadResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Specifies if the operation is successful or not",
            "example": "true"
          },
          "data": {
            "description": "Data",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.ResponseDto.GroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          },
          "parent": {
            "type": "string",
            "description": "Parent",
            "format": "uuid",
            "nullable": true,
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "category": {
            "type": "string",
            "description": "Category",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "isLDAP": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled for the group or not",
            "example": "true"
          },
          "manager": {
            "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.EmployeeFullDto"
            },
            "description": "List of members",
            "nullable": true
          },
          "shared": {
            "type": "boolean",
            "description": "Shared",
            "nullable": true,
            "example": "true"
          },
          "membersCount": {
            "type": "integer",
            "description": "Members count",
            "format": "int32",
            "example": "1234"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.ResponseDto.TaskProgressResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true,
            "example": "some text"
          },
          "error": {
            "type": "string",
            "description": "Error",
            "nullable": true,
            "example": "some text"
          },
          "percentage": {
            "type": "integer",
            "description": "Percentage",
            "format": "int32",
            "example": "1234"
          },
          "isCompleted": {
            "type": "boolean",
            "description": "IsCompleted",
            "example": "true"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Common.Threading.DistributedTaskStatus"
          }
        },
        "additionalProperties": false
      },
      "ASC.People.ApiModels.ResponseDto.ThumbnailsDataDto": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "description": "Original photo",
            "nullable": true,
            "example": "some text"
          },
          "retina": {
            "type": "string",
            "description": "Retina",
            "nullable": true,
            "example": "some text"
          },
          "max": {
            "type": "string",
            "description": "Maximum size",
            "nullable": true,
            "example": "some text"
          },
          "big": {
            "type": "string",
            "description": "Big",
            "nullable": true,
            "example": "some text"
          },
          "medium": {
            "type": "string",
            "description": "Medium",
            "nullable": true,
            "example": "some text"
          },
          "small": {
            "type": "string",
            "description": "Small",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.Contact": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Contact type",
            "nullable": true,
            "example": "GTalk"
          },
          "value": {
            "type": "string",
            "description": "Contact value",
            "nullable": true,
            "example": "my@gmail.com"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "some text"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": "true"
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": "true"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.EmployeeFullDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true,
            "example": "some text"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true,
            "example": "some text"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarOriginal": {
            "type": "string",
            "description": "Original size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMax": {
            "type": "string",
            "description": "Maximum size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarMedium": {
            "type": "string",
            "description": "Medium size avatar",
            "nullable": true,
            "example": "some text"
          },
          "avatarSmall": {
            "type": "string",
            "description": "Small avatar",
            "nullable": true,
            "example": "some text"
          },
          "profileUrl": {
            "type": "string",
            "description": "Profile URL",
            "nullable": true,
            "example": "some text"
          },
          "hasAvatar": {
            "type": "boolean",
            "description": "Specifies if the user has an avatar or not",
            "example": "true"
          },
          "isAnonim": {
            "type": "boolean",
            "description": "Specifies if the user is an anonim or not",
            "example": "true"
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true,
            "example": "some text"
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true,
            "example": "some text"
          },
          "userName": {
            "type": "string",
            "description": "Username",
            "nullable": true,
            "example": "some text"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true,
            "example": "some text"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.Contact"
            },
            "description": "List of contacts",
            "nullable": true
          },
          "birthday": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "sex": {
            "type": "string",
            "description": "Sex",
            "nullable": true,
            "example": "some text"
          },
          "status": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.EmployeeActivationStatus"
          },
          "terminated": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "department": {
            "type": "string",
            "description": "Department",
            "nullable": true,
            "example": "some text"
          },
          "workFrom": {
            "$ref": "#/components/schemas/ASC.Api.Core.ApiDateTime"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ASC.Web.Api.Models.GroupSummaryDto"
            },
            "description": "List of groups",
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "Location",
            "nullable": true,
            "example": "some text"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true,
            "example": "some text"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is an administrator or not",
            "example": "false"
          },
          "isRoomAdmin": {
            "type": "boolean",
            "description": "Specifies if the user is a room administrator or not",
            "example": "true"
          },
          "isLDAP": {
            "type": "boolean",
            "description": "Specifies if the LDAP settings are enabled for the user or not",
            "example": "true"
          },
          "listAdminModules": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of administrator modules",
            "nullable": true,
            "example": "some text"
          },
          "isOwner": {
            "type": "boolean",
            "description": "Specifies if the user is a portal owner or not",
            "example": "true"
          },
          "isVisitor": {
            "type": "boolean",
            "description": "Specifies if the user is a portal visitor or not",
            "example": "true"
          },
          "isCollaborator": {
            "type": "boolean",
            "description": "Specifies if the user is a portal collaborator or not",
            "example": "true"
          },
          "cultureName": {
            "type": "string",
            "description": "Language",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true,
            "example": "some text"
          },
          "mobilePhoneActivationStatus": {
            "$ref": "#/components/schemas/ASC.Core.Users.MobilePhoneActivationStatus"
          },
          "isSSO": {
            "type": "boolean",
            "description": "Specifies if the SSO settings are enabled for the user or not",
            "example": "true"
          },
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          },
          "quotaLimit": {
            "type": "integer",
            "description": "Quota limit",
            "format": "int64",
            "nullable": true,
            "example": "1234"
          },
          "usedSpace": {
            "type": "number",
            "description": "Portal used space",
            "format": "double",
            "nullable": true,
            "example": "12345"
          },
          "shared": {
            "type": "boolean",
            "description": "Shared",
            "nullable": true,
            "example": "true"
          },
          "isCustomQuota": {
            "type": "boolean",
            "description": "Specifies if the user has a custom quota or not",
            "nullable": true,
            "example": "true"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Api.Models.GroupSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "format": "uuid",
            "example": "9924256A-739C-462b-AF15-E652A3B1B6EB"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "some text"
          },
          "manager": {
            "type": "string",
            "description": "Manager",
            "nullable": true,
            "example": "some text"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Users.DarkThemeSettings": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/ASC.Web.Core.Users.DarkThemeSettingsType"
          }
        },
        "additionalProperties": false
      },
      "ASC.Web.Core.Users.DarkThemeSettingsType": {
        "enum": [
          "Base",
          "Dark",
          "System"
        ],
        "type": "string"
      },
      "System.Collections.Generic.KeyValuePair<System.String, Microsoft.Extensions.Primitives.StringValues>": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "asc_auth_key": {
        "type": "apiKey",
        "in": "cookie"
      }
    }
  }
}